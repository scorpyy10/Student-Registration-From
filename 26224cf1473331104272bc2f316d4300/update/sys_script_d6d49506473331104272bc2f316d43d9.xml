<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1299822_homework_student_registration_form</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1299822_homework_student_registration_form">u_calendar_date_time_3=^EQ<item endquery="false" field="u_calendar_date_time_3" goto="false" newquery="false" operator="=" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>DOB Validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

    // Check if the date of birth field is not empty
    if (!current.date_of_birth) {
        current.setWorkflow(false);
        gs.addErrorMessage('Date of birth is required.');
        return;
    }

    // Convert the entered date of birth to a GlideDate object
    var dob = new GlideDate(current.date_of_birth);

    // Get the current date
    var currentDate = new GlideDate();

    // Calculate the difference in years
    var age = currentDate.getYear() - dob.getYear();

    // Check if the user is 18 years or above and less than 100 years
    if (age >= 18 && age < 100) {
        // Date of birth is valid
        gs.addInfoMessage('Date of birth is valid.');
    } else {
        // Date of birth is not valid
        current.setWorkflow(false);
        gs.addErrorMessage('Invalid date of birth. Please enter a valid date.');
    }

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-01-19 05:33:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d6d49506473331104272bc2f316d43d9</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>DOB Validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="homework" source="x_1299822_homework">26224cf1473331104272bc2f316d4300</sys_package>
        <sys_policy/>
        <sys_scope display_value="homework">26224cf1473331104272bc2f316d4300</sys_scope>
        <sys_update_name>sys_script_d6d49506473331104272bc2f316d43d9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-01-19 05:39:28</sys_updated_on>
        <template>u_calendar_date_time_3=^EQ</template>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d6d49506473331104272bc2f316d43d9"/>
</record_update>
